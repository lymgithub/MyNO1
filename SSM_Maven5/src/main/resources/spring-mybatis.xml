<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:cache="http://www.springframework.org/schema/cache" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/cache 
                        http://www.springframework.org/schema/cache/spring-cache.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.cn.hnust" />  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
  
   <!--  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        初始化连接大小  
        <property name="initialSize" value="${initialSize}"></property>  
        连接池最大数量  
        <property name="maxActive" value="${maxActive}"></property>  
        连接池最大空闲  
        <property name="maxIdle" value="${maxIdle}"></property>  
        连接池最小空闲  
        <property name="minIdle" value="${minIdle}"></property>  
        获取连接最大等待时间  
        <property name="maxWait" value="${maxWait}"></property>  
    </bean> -->  
  <!-- sqlite内存数据库连接池-->    
    <bean id="sqliteDataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">    
        <property name="poolProperties">    
            <bean class="org.apache.tomcat.jdbc.pool.PoolProperties">    
                <property name="driverClassName" value="org.sqlite.JDBC"/>    
                <property name="url" value="jdbc:sqlite:lymdb.db"/>    
                <property name="minIdle" value="10"/>    
                <property name="maxActive" value="100"/>    
                <!-- 数据库连接池配置 -->    
                <!-- 初始化连接数量 -->    
                <property name="initialSize" value="50"/>    
                <!-- 最大连接数量 -->    
                <!-- 最小空闲连接数量 -->    
                <property name="removeAbandoned" value="true" />    
                <property name="removeAbandonedTimeout" value="600" />    
                <!-- 验证连接是否有效 -->    
                <property name="validationQuery" value="select 1" />    
                <!-- 验证失败时，是否将连接从池中丢弃 -->    
                <property name="testWhileIdle" value="true" />    
                <!-- 把空闲时间超过minEvictableIdleTimeMillis毫秒的连接断开,直到连接池中的连接数到minIdle为止(毫秒，30分钟) -->    
                <property name="timeBetweenEvictionRunsMillis" value="1200000" />    
                <!-- 连接池中连接可空闲的时间（毫秒，5分钟） -->    
                <property name="minEvictableIdleTimeMillis" value="1800000" />    
                <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->    
                <property name="numTestsPerEvictionRun" value="5" />    
            </bean>    
        </property>    
    </bean>
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/cn/hnust/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.cn.hnust.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
    
    <!-- 使用ehcache缓存（非注解） -->  
   <!--  <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml" />  
    </bean>   --> 
    
        <!-- 启用缓存注解功能(注解) -->
    <cache:annotation-driven cache-manager="ehcacheManager"/>
    <bean id="ehcacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
         <property name="configLocation" value="classpath:ehcache.xml" />
    </bean>
    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
         <property name="cacheManager" ref="ehcacheManagerFactory" />
    </bean>
  
</beans>  